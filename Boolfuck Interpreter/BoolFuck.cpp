#include <cstdlib>

char* boolfuck(const char* code, const char* input) {
    return (char*)calloc(1, 1);
}


char* boolfuck(const char* code, const char* input);

Describe(bool_fuck) {

    It(should_work_for_the_Hello_World_program_provided_on_the_official_website) {
        Assert::That(!strcmp(boolfuck(";;;+;+;;+;+;\
+;+;+;+;;+;;+;\
;;+;;+;+;;+;\
;;+;;+;+;;+;\
+;;;;+;+;;+;\
;;+;;+;+;+;;\
;;;;;+;+;;\
+;;;+;+;;;+;\
+;;;;+;+;;+;\
;+;+;;+;;;+;\
;;+;;+;+;;+;\
;;+;+;;+;;+;\
+;+;;;;+;+;;\
;+;+;+;", ""), "Hello, world!\n"));
    }

    It(should_work_with_more_example_test_cases) {
        Assert::That(!strcmp(boolfuck(">,>,>,>,>,>,>,>,<<<<<<<[>]+<[+<]>>>>>>>>>[+]+<<<<<<<<+[>+]<[<]>>>>>>>>>[+<<<<<<<<[>]+<[+<]>>>>>>>>>+<<<<<<<<+[>+]<[<]>>>>>>>>>[+]<<<<<<<<;>;>;>;>;>;>;>;<<<<<<<,>,>,>,>,>,>,>,<<<<<<<[>]+<[+<]>>>>>>>>>[+]+<<<<<<<<+[>+]<[<]>>>>>>>>>]<[+<]", "Codewars\xff"), "Codewars"));
        Assert::That(!strcmp(boolfuck(">,>,>,>,>,>,>,>,>+<<<<<<<<+[>+]<[<]>>>>>>>>>[+<<<<<<<<[>]+<[+<]>;>;>;>;>;>;>;>;>+<<<<<<<<+[>+]<[<]>>>>>>>>>[+<<<<<<<<[>]+<[+<]>>>>>>>>>+<<<<<<<<+[>+]<[<]>>>>>>>>>[+]+<<<<<<<<+[>+]<[<]>>>>>>>>>]<[+<]>,>,>,>,>,>,>,>,>+<<<<<<<<+[>+]<[<]>>>>>>>>>]<[+<]", "Codewars"), "Codewars"));
        Assert::That(!strcmp(boolfuckx08\x09"), "\x48"));
    }
};